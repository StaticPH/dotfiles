#!/bin/bash

# ~/.setup_basic_env
# Basic environment setup, including PATH


##############################################################
#-------------------------------------------------------------
# Custom shell variables and early exports
#-------------------------------------------------------------
##############################################################

# Colored man pages: http://linuxtidbits.wordpress.com/2009/03/23/less-colors-for-man-pages/
# Less Colors for Man Pages
# Coloration seems to behave strangely at times, but oh well.
# export LESS_TERMCAP_mb=$'\E[01;31m'     # begin blinking
#export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
#export LESS_TERMCAP_me=$'\E[0m'           # end mode
#export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
#export LESS_TERMCAP_so=$'\E[7;33;40m'     # begin standout-mode - info box
#export LESS_TERMCAP_ue=$'\E[0m'           # end underline
#export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

export EDITOR="/usr/bin/nano"
# export VISUAL="/usr/bin/nano"

TIME_STYLE="+%b %_2d, %_Y %_2I:%02M %p"


# For filename expansion, ignore filename matches that match any of the colon-separated globs in 'GLOBIGNORE'. Honors the setting of the extglob shell options
#-------------------------------------------------------------
# GLOBIGNORE=""


# Don't auto-complete files with the following file extensions
#-------------------------------------------------------------
FIGNORE=".dll:.DLL:.ax"


# Treat files (with executable-bit set) matching these globs as not being on the PATH. Does not affect commands in hash
#-------------------------------------------------------------
# EXECIGNORE=""


# Must press ctrl+D 1+$IGNOREEOF times to exit shell...
# because I've accidentally'd my shell a few times too many when trying to send ctrl+D while suffering input delay
#-------------------------------------------------------------
IGNOREEOF="1"

##############################################################
#-------------------------------------------------------------
# Helper Functions
#-------------------------------------------------------------
##############################################################

# Adds to the $PATH variable, if path not already present
# Default is to prepend to $PATH
# Add "after" to append to $PATH
function pathmunge () {
	if ! echo "$PATH" | $(/bin/grep -Eq "(^|:)$1($|:)") ; then	# try calling grep in subshell for potential slight performance boost
		if [ "$2" = "after" ] ; then
			PATH="$PATH:$1"
		else
			PATH="$1:$PATH"
		fi
	fi
}

# Does the same thing as pathmunge, but for MANPATH
function manpathmunge () {
	if ! echo "$MANPATH" | $(/bin/grep -Eq "(^|:)$1($|:)") ; then
		if [ "$2" = "after" ] ; then
			MANPATH="$MANPATH:$1"
		else
			MANPATH="$1:$MANPATH"
		fi
	fi
}

#Hopefully faster alternative to pathmunge
function pathadd() {                                             # Append to path, without duplicates
	[ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]] && \
	export PATH="${PATH:+"$PATH:"}$1"
}

function seemsLikeWSL(){	# May want to add an OS check here too, just to be safe.
	# Return 0 if the system appears to be WSL; return 1 otherwise
	[[ -n $(command -v wsl) || -n $(command -v wsl.exe) ]] && \
		return 0 || \
		return 1
}

##############################################################
#-------------------------------------------------------------
# Additions to PATH
#-------------------------------------------------------------
##############################################################

# Try to use /env/environment for the default system path;
# NOTE: this might have been a typo for /etc/environment, and should be verified
if [ -r "/env/environment" ]; then
	PATH=$(/usr/bin/cat /env/environment)
	PATH="${PATH:6:-1}"
else
	if [[ $OSTYPE == 'msys' ]]; then # Best guess at a default path for msys (or cygwin, but I don't use that personally)
		PATH="/usr/local/bin:/usr/bin:/bin:/opt/bin"
	else # Best guess at a default system path on a unix/linux system
		PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
	fi
fi

[ -d ~/bin ] && PATH="~/bin:$PATH"

# Don't add this clutter to the path if aliases have already been generated through generateAll.sh;
# the aliases will be sourced in .bashrc if they exist in the user's home directory
if [[ ! -r ~/.winAliases || ! -r ~/.sys32Aliases ]]; then
# !!TODO: Script that creates aliases for things in /c/Windows/System32/Wbem
	if [[ $OSTYPE == 'msys' ]]; then
		PATH="$PATH:/c/Windows/System32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/"
	elif [ $(seemsLikeWSL) ]; then
		# System is most likely WSL
		PATH="$PATH:/mnt/c/Windows/System32:/mnt/c/Windows:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/"
	fi
fi

[[ $OSTYPE == 'msys' ]] && PATH="$PATH:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl"

# [ -d /usr/bin/site_perl ] && PATH="$PATH:/usr/bin/site_perl"
# [ -d /usr/bin/vendor_perl ] && PATH="$PATH:/usr/bin/vendor_perl"
# [ -d /usr/bin/core_perl ] && PATH="$PATH:/usr/bin/core_perl"

##############################################################
#-------------------------------------------------------------
# Additions to MANPATH
#-------------------------------------------------------------
##############################################################

# I don't currently install anything that would have me adding to MANPATH with both msys and unix/linux systems

##############################################################
#-------------------------------------------------------------
# Load sensitive and machine-specific environment settings
#-------------------------------------------------------------
##############################################################

if [ -r "${HOME}/.setup_machine_env" ]; then
  source "${HOME}/.setup_machine_env"
fi

export PATH MANPATH
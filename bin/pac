#!/bin/bash

# Honor the NO_COLOR environment variable
if [ ! -v NO_COLOR ]; then
	_RED_="\033[31m"
	_OFF_="\033[0m"
else
	_RED_=
	_OFF_=
fi

function pacman(){
	if [ ! -v NO_COLOR ]; then
		command pacman --color=auto $@
	else
		command pacman --color=never $@
	fi
}

function usage(){
cat <<EOF
FLAGS:
   --completions  : output bash completion for pac to stdout.
   -h|--help      : Display this help text.
   -p             : (SYNC AND REMOVAL ONLY; Not Yet Implemented) Only simulate the command, do not execute it.

SUBCOMMANDS (Valid package operations):
   help    : Display this help text.
   removal : remove|autoremove
   sync    : install|update|download|upgrade|downgrade|
             info|show|cleanup|list|search|refresh
   query   : package-changelog|search-installed|
             owner-of|who-owns|list-package-owned|
             list-orphans|list-outdated|list-installed|
             list-explicitly-installed|list-dependencies
EOF
}

function completion(){
cat <<EOF
#!/bin/bash
complete -W "remove autoremove install update download upgrade downgrade info show cleanup list \
search refresh package-changelog search-installed owner-of who-owns list-package-owned list-orphans \
list-outdated list-installed list-explicitly-installed list-dependencies help --completion" pac
EOF
}

	if [[ $# == 0 ]]; then
		usage
	else
		case "$1" in
			remove)
				shift
				pacman -R $*
				;;
			autoremove)
				shift
				pacman -R --recursive $@
				;;
			info | show)
				shift
				pacman -S --info --info $*
				;;
			download)
				shift
				pacman -S --downloadonly $*
				;;
			install | update) # treat both install and update as the same
				shift
				pacman -S $*
				;;
			upgrade)
				shift
				pacman -Sy --sysupgrade $@
				;;
			downgrade)
				shift
				pacman -S --sysupgrade --sysupgrade $@
				;;
			cleanup)
				shift
				pacman -S --clean $@
				;;
			list)
				shift
				pacman -S --list #$@
				;;
			search)
				shift
				pacman -S --search $*
				# TODO: change this to search separately for each distinct parameter group, collate the results, and remove duplicates
				# multiple parameters can be grouped into a single parameter by enclosing them in quotes,
				# and pacman will exhibit its default search behavior of searching for packages containing ALL of the strings within the quotes.
				# strings not within quotes are treated as separate search queries.
				;;
			refresh)
				shift
				pacman -Sy # refresh the local sync database
				;;
			package-changelog)
				shift
				pacman -Q --changelog $@
				;;
			search-installed)
				shift
				pacman -Q --search $*
				# TODO: See TODO on "search"
				;;
			owner-of | who-owns)
				shift
				pacman -Q --owns $*
				# Not 100% sure how this differs from -F --owns, but it _sounds_ like -F --owns only works when you have the package installed,
				# while -Q --owns works for all known packages, installed or not. May be totally wrong about that.
				;;
			list-package-owned)
				shift
				pacman -Q --list $*
				# I don't fully understand the difference between -Ql and -Fl, because it _sounds_ like -F --list only works when you have the package installed,
				# while -Q --list works for all known packages (installed or not), but -Ql sometimes shows files not listed by -Fl.
				;;
			list-explicitly-installed)
				shift
				pacman -Q --explicit $@
				;;
			list-dependencies)
				printf "Currently doesn't quite do what might be expected from the name.\n"
				shift
				pacman -Q --deps $@
				;;
			list-orphans)
				shift
				pacman -Q --deps -t $@
				;;
			list-outdated) #list-out-of-date |
				shift
				pacman -Sy # refresh the local sync database
				pacman -Q --upgrades $@ #  check for out-of-date packages on the local system
				;;
			list-installed)
				shift
				pacman -Q --search
				;;
			-h | --help | help)
				usage
				exit
				;;
			--completion)
				completion
				exit
				;;
			*)
				printf "${_RED_}Invalid operation \"$1\"${_OFF_}\n"
				usage
				exit 1
				;;
		esac
		# Note: check installed packages for missing files using `pacman -Qk`, optionally piped into `grep "warning"`
	fi

unset -v _RED_ _OFF_
unset -f usage completion pacman
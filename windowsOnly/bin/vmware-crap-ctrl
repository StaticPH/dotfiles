#! /bin/bash
# -efx

__PROGNAME__="$(basename $0)"

usage(){
	echo "Usage: $__PROGNAME__ toggle|start|stop|disableInterfaces|enableInterfaces"
}

ifExistsThenToggle(){
	service=$(sc.exe query "$*" | tr -d "\r\n")
	if ! (echo "$service" | grep -q "does not exist"); then
		if (echo "$service" | grep -q "STATE\s*:.*STOPPED"); then
			net.exe start "$*"
		else
			net.exe stop "$*"
		fi
	else
		echo 'No service named "'"$1"'" exists.'
	fi
	pkill "sc query"
}

# ifExistsThenToggle VMUSBArbService
# # eval 'ifExistsThenToggle ""VMware NAT Service""'
# ifExistsThenToggle "VMware NAT Service"

# I changed my mind; I dont care what state the service is in, or even if it exists at all. Just TRY to do stuff to it and disregard any failures.
start(){
	net.exe start "$*" 2>/dev/null #2>&1
}
stop(){
	net.exe stop "$*" 2>/dev/null #2>&1
}

enableAdapter(){
	netsh.exe interface set interface "$*" enable
}

disableAdapter(){
	netsh.exe interface set interface "$*" disable
}

doForAll(){
	$1 VMUSBArbService				# VMware USB Arbitration Service
	$1 "VMware NAT Service"			# VMware NAT Service
	$1 VMnetDHCP					# VMware DHCP Service
	# $1 vmware-view-usbd			# VMware View USB
	# $1 vmwsprrdpwks				# VMware Serial COM Redirection Client Service
	# $1 wsnm						# VMware Horizon Client; unused
	# $1 VMAuthdService				# VMware Authorization Service
	# $1 ftscanmgr					# VMware Scanner Redirection Client Service
	$1 ftnlsv3hv					# VMware Netlink Supervisor Service

}

[ $# -ne 1 ] && usage && exit 1

case "$1" in
	toggle)
		doForAll "ifExistsThenToggle"
		;;
	start)
		doForAll "start"
		;;
	stop)
		doForAll "stop"
		# pkill VMnetDHCP
		;;
	disableInterfaces|disable|dis)
		disableAdapter "VMware Network Adapter VMnet1"
		disableAdapter "VMware Network Adapter VMnet8"
		;;
	enableInterfaces|enable|en)
		enableAdapter "VMware Network Adapter VMnet1"
		enableAdapter "VMware Network Adapter VMnet8"
		;;
	*)
		echo "Invalid arguement \"$1\""
		usage
		exit 1
		;;
esac


#g='"'"VMware NAT Service"'"'; echo $g
#b=$(sed -s s/" "/"\\\ "/g <<< "$g")

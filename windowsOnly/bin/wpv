#! /bin/bash

limit=10	# Maximum number of files to open at once. Can be overriden with --limit
__PROGNAME__="$(basename $0)"

usage(){
cat << EOF
Usage: $__PROGNAME__ [--help | -h | --limit NUM] FILEPATHS...
    Attempt to open up to $limit FILEPATHS in Windows Photo Viewer.
    This limit can be overriden using the --limit option.

    Options:
      -h, --help        Display this help and exit.
          --limit NUM   Override the default limit of files which can be opened at once with NUM (Default limit is $limit).
                        Note that specifying a value less than 1 will remove the limit.
EOF
}

if [[ $# == 0 ]]; then
	usage
	exit
fi

case "$1" in
	-h | -help | --help )
		usage
		exit
		;;
	--limit)
		shift
		limit=$1
		shift
		;;
esac

view(){
	rundll32 "C:\Program Files\Windows Photo Viewer\PhotoViewer.dll" ImageView_Fullscreen $1 &
}

# Attempt path conversion (already Windows-like paths should remain unchanged), and fatally error if unable to find a tool for doing so.
if [ -n "$(type -t cygpath)" ]; then
	winPath="$(cygpath --windows -a "$@")"
elif [ -n "$(type -t wslpath)" ]; then
	winPath="$(wslpath -wa "$@")"
else
	echo "Neither cygpath nor wslpath found. No known alternative for ensuring Windows-style file paths. Aborting..."
	exit 1
fi

# By default, there is a limit to how many files can be opened by running this script once.
# This is to prevent a user from accidentally opening tens of files at once using globbing.
i=0
while read -r foo; do
	# echo -e "\033[1;34mDisplaying $foo\033[0m"
	view "$foo"
	let i++
	if [[ $i == $limit ]]; then
		echo "Reached file open limit. Stopping..."
		break
	fi
done <<< "$winPath" #|sed 's/.*/\"&\"/g'
